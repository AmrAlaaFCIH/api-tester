{"version":3,"sources":["context/api.js","components/navbar.js","components/row.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["ApiContext","createContext","reducer","state","action","type","api_link","payload","api_method","mark","requestBody","loading","apiData","error","Api","children","useReducer","dispatch","startRequest","a","setAxiosHeaders","axios","baseURL","method","data","timeout","res","Provider","value","Headers","setLink","link","setMethod","setMark","object","setUnMark","update","methods","label","NavbarComp","useContext","useState","isOpen","setIsOpen","useEffect","Alert","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","Input","style","width","marginBottom","placeholder","onChange","event","InputPicker","Button","appearance","marginLeft","RowComp","headerName","headerValue","Main","headerNameArr","headerValueArr","setState","handleChange","target","name","dindex","filter","mem","i","delAxiosHeaders","Container","fluid","Row","Col","md","Card","CardBody","CardTitle","fontSize","form","sm","FormGroup","Label","e","preventDefault","includes","Table","map","header_name","index","key","colors","background","background_warning","string","number","colon","keys","keys_whiteSpace","primitive","locale","height","json","src","Loader","size","center","content","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","header","defaults","headers","get","post","put","delete","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c5ab4f04.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport axios from \"axios\";\r\nimport { setAxiosHeaders } from \"../index\";\r\nexport const ApiContext = createContext();\r\n\r\nconst GET_API_LINK = \"GET_API_LINK\";\r\nconst GET_API_METHOD = \"GET_API_METHOD\";\r\nconst MARK = \"MARK\";\r\nconst RELEASE = \"RELEASE\";\r\nconst UPDATE_BODY = \"UPDATE_BODY\";\r\nconst MAKING_REQUEST = \"MAKING_REQUEST\";\r\nconst REQUEST_DONE = \"REQUEST_DONE\";\r\nconst REQUEST_ERROR = \"REQUEST_ERROR\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_API_LINK:\r\n      return { ...state, api_link: action.payload };\r\n    case GET_API_METHOD:\r\n      return { ...state, api_method: action.payload };\r\n    case MARK:\r\n      return { ...state, mark: action.payload };\r\n    case RELEASE:\r\n      return { ...state, mark: null };\r\n    case UPDATE_BODY:\r\n      return { ...state, requestBody: action.payload };\r\n    case MAKING_REQUEST:\r\n      return { ...state, loading: true , apiData:null , error: null };\r\n    case REQUEST_DONE:\r\n      return { ...state, loading: false, apiData: action.payload };\r\n    case REQUEST_ERROR:\r\n      return { ...state, loading: false, error: action.payload , apiData : null};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Api = ({ children }) => {\r\n  const intailState = {\r\n    api_link: null,\r\n    api_method: null,\r\n    mark: null,\r\n    requestBody: \"\",\r\n    loading: false,\r\n    error: null,\r\n    apiData: null\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, intailState);\r\n\r\n  const setLink = link => {\r\n    dispatch({ type: GET_API_LINK, payload: link });\r\n  };\r\n\r\n  const setMethod = method => {\r\n    dispatch({ type: GET_API_METHOD, payload: method });\r\n  };\r\n  const setMark = object => {\r\n    dispatch({ type: MARK, payload: object });\r\n  };\r\n  const setUnMark = () => {\r\n    dispatch({ type: RELEASE });\r\n  };\r\n  const update = object => {\r\n    dispatch({ type: UPDATE_BODY, payload: object });\r\n  };\r\n\r\n  const startRequest = async () => {\r\n    dispatch({ type: MAKING_REQUEST });\r\n    setAxiosHeaders(\"Content-Type\", \"application/json\");\r\n    try {\r\n      const res = await axios({\r\n        baseURL: state.api_link,\r\n        method: state.api_method,\r\n        data: state.requestBody,\r\n        timeout: 10000\r\n      });\r\n      dispatch({ type: REQUEST_DONE, payload: res.data });\r\n    } catch (error) {\r\n      dispatch({ type: REQUEST_ERROR, payload: error });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ApiContext.Provider\r\n      value={{\r\n        api_link: state.api_link,\r\n        api_method: state.api_method,\r\n        Headers: state.Headers,\r\n        mark: state.mark,\r\n        requestBody: state.requestBody,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        apiData: state.apiData,\r\n        setLink,\r\n        setMethod,\r\n        setMark,\r\n        setUnMark,\r\n        update,\r\n        startRequest\r\n      }}\r\n    >\r\n      {children}\r\n    </ApiContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Api;\r\n","import React, { useState, useContext ,useEffect } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem\r\n} from \"reactstrap\";\r\nimport { Input, InputPicker, Button , Alert } from \"rsuite\";\r\nimport { ApiContext } from \"../context/api\";\r\nimport \"rsuite/dist/styles/rsuite-default.css\";\r\n\r\nconst methods = [\r\n  {\r\n    label: \"GET\",\r\n    value: \"GET\"\r\n  },\r\n  {\r\n    label: \"POST\",\r\n    value: \"POST\"\r\n  },\r\n  {\r\n    label: \"PUT\",\r\n    value: \"PUT\"\r\n  },\r\n  {\r\n    label: \"DELETE\",\r\n    value: \"DELETE\"\r\n  }\r\n];\r\n\r\nconst NavbarComp = () => {\r\n  const { setMethod, api_method, setLink, startRequest , error } = useContext(\r\n    ApiContext\r\n  );\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  useEffect(()=>{\r\n    if (error) {\r\n        Alert.error(`can't fetch data`,2000);\r\n    }\r\n  },[error])\r\n  const toggle = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const handleChange = value => {\r\n    setMethod(value);\r\n  };\r\n  const handleInputChange = event => {\r\n    setLink(event);\r\n  };\r\n  const getData = () => {\r\n    startRequest();\r\n  };\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">API-Tester</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <Input\r\n                style={{ width: 300, marginBottom: 10 }}\r\n                placeholder=\"API-Link\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </NavItem>\r\n            <NavItem>\r\n              <InputPicker\r\n                value={api_method}\r\n                onChange={handleChange}\r\n                data={methods}\r\n                style={{ width: 100 }}\r\n                placeholder=\"Method\"\r\n              />\r\n              {api_method ? (\r\n                <Button\r\n                  appearance=\"default\"\r\n                  color=\"blue\"\r\n                  style={{ marginLeft: 10 }}\r\n                  onClick={getData}\r\n                >\r\n                  {api_method}\r\n                </Button>\r\n              ) : null}\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavbarComp;\r\n","import React ,{useContext} from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport { ApiContext } from '../context/api';\r\n\r\nconst RowComp = ({headerName,headerValue}) => {\r\n    const {setMark}=useContext(ApiContext);\r\n    const mark=()=>{\r\n        setMark({headerName,headerValue});\r\n    }\r\n  return (\r\n    <tr>\r\n      <td>{headerName}</td>\r\n      <td>{headerValue}</td>\r\n      <td className=\"delete\">\r\n        <Button onClick={mark}>Remove</Button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default RowComp;","import ReactJson from \"react-json-view\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Table,\r\n  Button\r\n} from \"reactstrap\";\r\nimport JSONInput from \"react-json-editor-ajrm\";\r\nimport locale from \"react-json-editor-ajrm/locale/en\";\r\nimport { ApiContext } from \"../context/api\";\r\nimport { Alert, Loader } from \"rsuite\";\r\nimport RowComp from \"./row\";\r\nimport { setAxiosHeaders, delAxiosHeaders } from \"../index\";\r\n\r\nconst Main = () => {\r\n  const [state, setState] = useState({\r\n    headerName: \"\",\r\n    headerValue: \"\",\r\n    headerNameArr: [],\r\n    headerValueArr: []\r\n  });\r\n  const { setUnMark, mark, update, apiData, loading } = useContext(ApiContext);\r\n  const handleChange = event => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  const handleChangeJSON = event => {\r\n    update(event.json);\r\n  };\r\n  useEffect(() => {\r\n    if (mark) {\r\n      let dindex = null;\r\n      setState({\r\n        headerNameArr: [...state.headerNameArr].filter((mem, i) => {\r\n          if (mem === mark.headerName) {\r\n            dindex = i;\r\n          }\r\n          return !(mem === mark.headerName);\r\n        }),\r\n        headerValueArr: [...state.headerValueArr].filter((mem, i) => {\r\n          return !(i === dindex);\r\n        }),\r\n        headerName: \"\",\r\n        headerValue: \"\"\r\n      });\r\n      delAxiosHeaders(mark.headerName);\r\n      setUnMark();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [mark]);\r\n  const setData = e => {\r\n    e.preventDefault();\r\n    if (state.headerName && state.headerValue) {\r\n      if (!state.headerNameArr.includes(state.headerName)) {\r\n        setAxiosHeaders(state.headerName, state.headerValue);\r\n        setState({\r\n          headerNameArr: [...state.headerNameArr, state.headerName],\r\n          headerValueArr: [...state.headerValueArr, state.headerValue],\r\n          headerName: \"\",\r\n          headerValue: \"\"\r\n        });\r\n      } else {\r\n        Alert.error(\"You can't have two headers of the same name\", 2000);\r\n      }\r\n    } else {\r\n      Alert.error(\"Header and Value can't be empty\", 1500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col md=\"6\">\r\n          <div className=\"headers\">\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle>\r\n                  <p style={{ fontSize: 25 }}>Request Headers</p>\r\n                </CardTitle>\r\n                <Row form>\r\n                  <Col sm=\"5\">\r\n                    <FormGroup>\r\n                      <Label>Header</Label>\r\n                      <Input\r\n                        value={state.headerName}\r\n                        type=\"text\"\r\n                        name=\"headerName\"\r\n                        placeholder=\"Header-Title\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col sm=\"5\">\r\n                    <FormGroup>\r\n                      <Label>Value</Label>\r\n                      <Input\r\n                        value={state.headerValue}\r\n                        type=\"text\"\r\n                        name=\"headerValue\"\r\n                        placeholder=\"Value\"\r\n                        onChange={handleChange}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col sm=\"2\" className=\"submit\">\r\n                    <Button onClick={setData}>Add</Button>\r\n                  </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                  <Table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Header</th>\r\n                        <th>Value</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {state.headerNameArr.map((header_name, index) => {\r\n                        return (\r\n                          <RowComp\r\n                            key={`${header_name}${index}`}\r\n                            headerName={header_name}\r\n                            headerValue={state.headerValueArr[index]}\r\n                          />\r\n                        );\r\n                      })}\r\n                    </tbody>\r\n                  </Table>\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n          <div className=\"json\">\r\n            <Card>\r\n              <CardBody>\r\n                <p style={{ fontSize: 25 }}>JSON Body</p>\r\n                <JSONInput\r\n                  colors={{\r\n                    background: \"#1E1E1E\",\r\n                    background_warning: \"#FEECEB\",\r\n                    string: \"#FA7921\",\r\n                    number: \"#70CE35\",\r\n                    colon: \"#49B8F7\",\r\n                    keys: \"#59A5D8\",\r\n                    keys_whiteSpace: \"#835FB6\",\r\n                    primitive: \"#386FA4\"\r\n                  }}\r\n                  locale={locale}\r\n                  height=\"220px\"\r\n                  width=\"100%\"\r\n                  onChange={handleChangeJSON}\r\n                />\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n        </Col>\r\n        <Col md=\"6\">\r\n          {apiData ? (\r\n            <ReactJson src={apiData} />\r\n          ) : loading ? (\r\n            <Loader size=\"lg\" center content=\"Fetching Data\" />\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport NavbarComp from \"./components/navbar\";\r\nimport 'rsuite/dist/styles/fonts/rsuite-icon-font.woff';\r\nimport Api from \"./context/api\";\r\nimport Main from './components/main';\r\n\r\nfunction App() {\r\n  return (\r\n    <Api>\r\n      <NavbarComp />\r\n      <Main />\r\n    </Api>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport axios from \"axios\";\r\nexport const setAxiosHeaders = (header, value) => {\r\n  axios.defaults.headers.get[header] = value;\r\n  axios.defaults.headers.post[header] = value;\r\n  axios.defaults.headers.put[header] = value;\r\n  axios.defaults.headers.delete[header] = value;\r\n};\r\nexport const delAxiosHeaders = header => {\r\n  delete axios.defaults.headers.get[header];\r\n  delete axios.defaults.headers.post[header];\r\n  delete axios.defaults.headers.put[header];\r\n  delete axios.defaults.headers.delete[header];\r\n};\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}